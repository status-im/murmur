{"version":3,"sources":["../src/manager.js"],"names":["randomBytes","pbkdf2","require","secp256k1","messages","keccak256","rlp","stripHexPrefix","constants","pow","Big","Uint64BE","bloom","MessageTracker","Manager","constructor","provider","options","keys","subscriptions","messagesTracker","executeOnReady","cb","onReadyCB","setupNodes","nodes","map","n","setTracker","start","listenToProviderEvents","listenToNodeEvents","getNode","protocol","find","x","type","isReady","ready","filter","length","console","log","events","on","payload","symKeyID","pubKey","sig","ttl","topic","padding","powTime","powTarget","targetPeer","messagePayload","Buffer","from","expiry","Math","floor","Date","getTime","isBuffer","privKey","toString","symKey","symmetricKey","validateDataIntegrity","symKeyLength","match","envelope","buildMessage","err","dispatchEnvelope","encryptedMessage","error","powResult","ProofOfWork","nonceBuffer","nonce","non0","val","i","push","msgEnv","expiryB","alloc","writeUInt32BE","ttlB","writeUInt8","p","encode","devp2p","libp2p","broadcast","sendEnvelopeToSubscribers","encryptSymmetric","encryptAsymmetric","_minPow","privateKeyID","topics","_allowP2P","id","keyIdLength","enode","addTrustedPeer","url","urlParts","split","ipInfo","replace","address","port","addStaticPeer","data","minPow","message","peerId","mailserverPeer","now","to","timeout","publicKey","createBloomFilter","limit","concat","privateKey","emit","privKeyLength","publicKeyCreate","key","deleteKey","errMsg","password","derivedKey","isSent","hexStringToDecString","toBuffer","calculatedPow","calculatePoW","topicSubscriptions","join","subscriptionId","decryptCB","decrypted","transmit","subscription","result","timestamp","hash","keyId","slice","decryptAsymmetric","decryptSymmetric","isBridge","handleMessage","msg","module","exports"],"mappings":"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","sourcesContent":["const { randomBytes, pbkdf2 } = require('crypto-browserify');\nconst secp256k1 = require('secp256k1');\nconst messages = require('./messages.js');\nconst {keccak256} = require(\"eth-lib/lib/hash\");\nconst rlp = require('rlp-encoding');\nconst stripHexPrefix = require('strip-hex-prefix');\nconst constants = require('./constants');\nconst pow = require('./pow');\nconst Big = require('big.js');\nconst Uint64BE = require(\"int64-buffer\").Uint64BE;\nconst bloom = require('./bloom');\nconst MessageTracker = require('./message-tracker');\n\n\nclass Manager {\n\n  constructor(provider, options) {\n    this.provider = provider;\n    this.options = options;\n    this.keys = {};\n    this.subscriptions = {};\n    this.messagesTracker = new MessageTracker();\n  }\n\n  executeOnReady(cb){\n    this.onReadyCB = cb;\n  }\n\n  setupNodes(nodes){\n    this.nodes = nodes;\n    nodes.map(n => {\n      n.setTracker(this.messagesTracker);\n    });\n  }\n\n  start(){   \n     this.listenToProviderEvents();\n     this.listenToNodeEvents();\n  }\n\n  getNode(protocol) {\n    return this.nodes.find(x => x.type === protocol);\n  }\n\n  isReady(protocol){\n    this.getNode(protocol).ready = true;\n    if(!this.nodes.filter(x => !x.ready).length){\n      console.log(\"Murmur ready\");\n      if(this.onReadyCB) this.onReadyCB();\n    }\n  }\n\n  listenToProviderEvents() {\n    this.provider.events.on('post', (payload, cb) => {\n      let {\n        symKeyID,\n        pubKey,\n        sig,\n        ttl,\n        topic,\n        padding,\n        powTime,\n        powTarget,\n        targetPeer\n      } = payload;\n\n      let messagePayload = Buffer.from(stripHexPrefix(payload.payload), 'hex');\n\n      topic = Buffer.from(stripHexPrefix(topic), 'hex');\n\n      if(ttl === 0){\n        ttl = 50; // Default TTL\n      }\n\n      const options = {};\n\n      const expiry = Math.floor((new Date()).getTime() / 1000.0) + ttl;\n\n      if(!!sig){\n        if(Buffer.isBuffer(sig)){\n          options.from = { privKey: \"0x\" + sig.toString('hex') };\n        } else {\n          options.from = this.keys[sig];\n          if(!options.from || !options.from.privKey){\n            return cb(\"No identity found\");\n          }\n        }\n      }\n\n      if(pubKey && symKeyID) return cb(\"Either symKeyID or pubKey should be specified, not both\");\n\n      // Set symmetric key that is used to encrypt the message\n      if(!!symKeyID){\n        if(!topic) return cb(\"Topic is required\");        \n        if(topic.length > 4) return cb(\"Topic length is incorrect\");\n        \n        options.symKey = this.keys[symKeyID];\n        if (!options.symKey || !options.symKey.symmetricKey) return cb(\"No symmetric key found\");\n        if(!messages.validateDataIntegrity(Buffer.from(stripHexPrefix(options.symKey.symmetricKey), \"hex\"), constants.symKeyLength)) return cb(\"Invalid symmetric key\");\n      } else {\n        if(!pubKey) return cb(\"Pubkey is required\");\n        if(!stripHexPrefix(pubKey).match(/^[0-9A-Fa-f]{130}$/)) return cb(\"Invalid pubkey\");\n      }\n\n      let  envelope = messages.buildMessage(messagePayload, padding, sig, options, (err) => {\n        if(err) console.log(err);\n      });\n\n      const dispatchEnvelope = (err, encryptedMessage) => {\n        if(err){\n          console.error(err);\n          return cb(\"Error encrypting message\");\n        }\n\n        const powResult = pow.ProofOfWork(powTarget, powTime, ttl, topic, encryptedMessage, expiry);\n\n        let nonceBuffer =  powResult.nonce;\n        let non0 = false;\n        let val = [];\n        for(let i = 0; i < nonceBuffer.length; i++){\n          if(nonceBuffer[i] !== 0){\n            non0 = true;\n          }\n          if(non0){\n            val.push(nonceBuffer[i]);\n          }\n        }\n        nonceBuffer = Buffer.from(val);\n\n        const msgEnv = [];\n\n        const expiryB = Buffer.alloc(4);\n              expiryB.writeUInt32BE(powResult.expiry);\n        const ttlB = Buffer.alloc(1);\n              ttlB.writeUInt8(ttl);\n\n        msgEnv.push(expiryB);\n        msgEnv.push(ttlB);\n        msgEnv.push(topic);\n        msgEnv.push(encryptedMessage);\n        msgEnv.push(nonceBuffer);\n\n        const p = rlp.encode(targetPeer ? msgEnv : [msgEnv]);\n        \n        const devp2p = this.getNode('devp2p');\n        const libp2p = this.getNode('libp2p');\n\n        if(targetPeer){\n          // Mailserver request\n          if(devp2p) devp2p.broadcast(p, targetPeer.toString('hex'), 126);\n          // TODO: libp2p mailserver\n        } else {\n\n          if(devp2p) {\n            devp2p.broadcast(p);\n            this.messagesTracker.push(msgEnv, 'devp2p');\n          }\n          if(libp2p){\n            libp2p.broadcast(p);\n            this.messagesTracker.push(msgEnv, 'libp2p');\n          }\n\n          this.sendEnvelopeToSubscribers(msgEnv);\n        }\n      \n      };\n\n      if(options.symKey){\n        messages.encryptSymmetric(topic, envelope, options, dispatchEnvelope);\n      } else {\n        messages.encryptAsymmetric(envelope, pubKey, dispatchEnvelope);\n      }\n    });\n\n    // TODO: this needs to refactored to take into account different clients\n    this.provider.events.on('subscribe', (payload, cb) => {\n      const { _minPow, symKeyID, privateKeyID, topics, _allowP2P } = payload;\n      const id = randomBytes(constants.keyIdLength).toString('hex');\n      for (let topic of topics) {\n        if (!this.subscriptions[topic]) {\n          this.subscriptions[topic] = {};\n        }\n        this.subscriptions[topic][id] = {\n          privateKeyID,\n          symKeyID\n        };\n      }\n\n      cb(null, id);\n    });\n\n\n    this.provider.events.on(\"markTrustedPeer\", enode => {\n      this.getNode('devp2p').addTrustedPeer(enode);\n    });\n\n    \n    this.provider.events.on(\"addPeer\", (url, cb) => {\n      const urlParts = url.split(\"@\");\n      const ipInfo = urlParts[1].split(\":\");\n\n      const id = Buffer.from(urlParts[0].replace(\"enode://\", \"\"), \"hex\");\n      const address = ipInfo[0];\n      const port = ipInfo[1];\n\n      this.getNode('devp2p').addStaticPeer({ id, address, port }, (err, data) => {\n        if(err){\n          cb(err);\n        } else {\n          cb(null, data);\n        }\n      });\n    });\n\n    this.provider.events.on(\"requestMessages\", (minPow, message, cb) => {\n      let peerId = Buffer.from(message.mailserverPeer.split(\"@\")[0].replace('enode://', ''), 'hex');\n      const now = parseInt((new Date()).getTime() / 1000, 10);\n\n      if(!message.to) message.to = now;\n      if(!message.from)  message.from = now - 86400; // -24hr\n      if(!message.timeout) message.timeout = 30;\n\n      let publicKey = null;\n\n      const payload = rlp.encode([message.from, message.to, bloom.createBloomFilter(message), message.limit, null, 1]);\n\n      if(!message.symKeyID){\n        publicKey = Buffer.concat([Buffer.from(4), Buffer.from(peerId, 'hex')]);\n      }\n\n      // TODO: mailserver request. Check how it would work with libp2p\n      const envelope = {\n        symKeyID: message.symKeyID,\n        pubKey: publicKey,\n        sig: this.getNode('devp2p').privateKey,\n        ttl: 50,\n        topic: \"0x00000000\",\n        powTime: 1, //  TODO: If using default time of 5 secs, peer will disconnect. PoW needs to happen in a separate thread\n        powTarget: minPow,\n        payload: payload,\n        targetPeer: peerId\n      };\n\n      this.provider.events.emit('post', envelope, cb);\n    });\n\n    this.provider.events.on(\"newKeyPair\", (cb) => {\n      const id = randomBytes(constants.keyIdLength).toString('hex');\n\n      if(this.keys[id]) return cb(\"key is not unique\");\n\n      const privKey = randomBytes(constants.privKeyLength);\n      const pubKey = secp256k1.publicKeyCreate(privKey, false);\n\n      this.keys[id] = {\n        privKey: \"0x\" + privKey.toString('hex'),\n        pubKey: \"0x\" + pubKey.toString('hex')\n      };\n\n      cb(null, id);\n    });\n\n    this.provider.events.on(\"addPrivateKey\", (privKey, cb) => {\n      const id = randomBytes(constants.keyIdLength).toString('hex');\n\n      if(this.keys[id]) return cb(\"key is not unique\");\n\n      privKey = stripHexPrefix(privKey);\n\n      this.keys[id] = {\n        privKey: \"0x\" + privKey,\n        pubKey: \"0x\" + secp256k1.publicKeyCreate(Buffer.from(privKey, \"hex\"), false).toString('hex')\n      };\n\n      cb(null, id);\n    });\n\n    this.provider.events.on(\"getPublicKey\", (id, cb) => {\n      const key = this.keys[id];\n      if (!key || !key.pubKey) { return cb(\"key not found\"); }\n\n      cb(null, key.pubKey);\n    });\n\n    this.provider.events.on(\"getPrivateKey\", (id, cb) => {\n      const key = this.keys[id];\n      if (!key || !key.privKey) { return cb(\"key not found\"); }\n\n      cb(null, key.privKey);\n    });\n\n    this.provider.events.on(\"hasKeyPair\", (id, cb) => {\n      const key = this.keys[id];\n      cb(null, !!key && !!key.privKey);\n    });\n\n    const deleteKey = (id, cb) => {\n      if(id.length / 2 !== constants.keyIdLength){\n        const errMsg = \"invalid id\";\n        return cb(errMsg);\n      }\n\n      if(this.keys[id]){\n        delete this.keys[id];\n        cb(null, true);\n      } else {\n        cb(null, false);\n      }\n    };\n\n    this.provider.events.on(\"deleteKeyPair\", (id, cb) => {\n      deleteKey(id, cb);\n    });\n\n    this.provider.events.on(\"addSymKey\", (symmetricKey, cb) => {\n      const id = randomBytes(constants.keyIdLength).toString('hex');\n\n      if(this.keys[id]) return cb(\"key is not unique\");\n\n      if(stripHexPrefix(symmetricKey).length / 2 !== constants.symKeyLength){\n        return cb(\"wrong key size\");\n      }\n\n      this.keys[id] = {\n        symmetricKey: \"0x\" + stripHexPrefix(symmetricKey)\n      };\n\n      cb(null, id);\n    });\n\n    this.provider.events.on(\"newSymKey\", (cb) => {\n      const id = randomBytes(constants.keyIdLength).toString('hex');\n      const symmetricKey = \"0x\" + randomBytes(constants.symKeyLength).toString('hex');\n\n      if(this.keys[id]) return cb(\"key is not unique\");\n\n      this.keys[id] = {\n        symmetricKey\n      };\n\n      cb(null, id);\n    });\n\n    this.provider.events.on(\"generateSymKeyFromPassword\", (password, cb) => {\n      const id = randomBytes(constants.keyIdLength).toString('hex');\n\n      if(this.keys[id]) return cb(\"key is not unique\");\n\n      pbkdf2(password, \"\", 65356, constants.symKeyLength, 'sha256', (err, derivedKey) => {\n        if (err) return cb(err);\n\n        this.keys[id] = {symmetricKey: \"0x\" + derivedKey.toString('hex')};\n\n        cb(null, id);\n      });\n    });\n\n    this.provider.events.on(\"hasSymKey\", (id, cb) => {\n      const key = this.keys[id];\n      cb(null, !!key && !!key.symmetricKey);\n    });\n\n    this.provider.events.on(\"getSymKey\", (id, cb) => {\n      const key = this.keys[id];\n      if (!key || !key.symmetricKey) { return cb(\"key not found\"); }\n\n      cb(null, key.symmetricKey);\n    });\n\n    this.provider.events.on(\"deleteSymKey\", (id, cb) => {\n      deleteKey(id, cb);\n    });\n  }\n\n  sendEnvelopeToSubscribers(message) {\n    if(this.messagesTracker.isSent(message)) return;\n\n    //console.dir('received message, sending to subscribers...');\n    let [expiry, ttl, topic, data, nonce] = message;\n\n    // Preparing data\n    nonce = (new Uint64BE(new Big(pow.hexStringToDecString(nonce.toString('hex'))))).toBuffer();\n\n    ttl = (typeof ttl === 'number') ? ttl : parseInt(pow.hexStringToDecString(ttl.toString('hex')), 10);\n    const calculatedPow = pow.calculatePoW(expiry, ttl, topic, data, nonce);\n\n    let topicSubscriptions = this.subscriptions['0x' + topic.toString('hex')];\n    if (!topicSubscriptions) {\n      return;\n    }\n\n    let id = keccak256(message.join(''));\n\n    for (let subscriptionId of Object.keys(topicSubscriptions)) {\n\n      const decryptCB = (err, decrypted) => {\n        \n        if(!decrypted) return;\n        // console.dir(decrypted.payload.toString());\n        //onsole.dir(decrypted.pubKey.toString('hex'));\n\n        this.provider.transmit({\n          \"jsonrpc\": \"2.0\",\n          \"method\": \"shh_subscription\",\n          \"params\": {\n            subscription: subscriptionId,\n            result: {\n              sig: \"0x\" + decrypted.pubKey.toString('hex'),\n              // recipientPublicKey: null,\n              ttl: ttl,\n              timestamp: 1498577270, // TODO: correct value\n              topic: \"0x\" + topic.toString('hex'),\n              payload: \"0x\" + decrypted.payload.toString('hex'),\n              //padding: decrypted.padding.toString('hex'),\n              padding: null,\n              pow: calculatedPow,\n              hash: id\n            }\n          }\n        });\n      };\n\n     // console.dir(\">>>>> subscription\");\n      let keyId = topicSubscriptions[subscriptionId].symKeyID;\n      if (!keyId) {\n        keyId = topicSubscriptions[subscriptionId].privateKeyID;\n        let key = Buffer.from(this.keys[keyId].privKey.slice(2), 'hex');\n        messages.decryptAsymmetric(key, data, decryptCB);\n      } else {\n        let key = Buffer.from(this.keys[keyId].symmetricKey.slice(2), 'hex');\n        messages.decryptSymmetric(topic, key, data, decryptCB);\n      }\n\n    }\n    // console.dir(message)\n    // TODO: send to clients subscribed to this message topic\n  }\n\n  listenToNodeEvents() {\n    const isBridge = this.options.isBridge;\n\n    const handleMessage = protocol => msg => {\n      if(isBridge) this.getNode(protocol).broadcast(rlp.encode([msg]));\n      this.sendEnvelopeToSubscribers(msg); \n    };\n\n    if(this.getNode('devp2p')) {\n      this.getNode('devp2p').events.on('ready', () => { \n        this.isReady('devp2p');\n      });\n      this.getNode('devp2p').events.emit('ready');\n\n      this.getNode('devp2p').events.on('shh_message', handleMessage('libp2p'));\n    }\n    if(this.getNode('libp2p')) {\n      this.getNode('libp2p').events.on('ready', () => { this.isReady('libp2p'); });\n      this.getNode('libp2p').events.on('shh_message', handleMessage('devp2p'));\n    }\n  }\n\n}\n\nmodule.exports = Manager;\n"],"file":"manager.js"}