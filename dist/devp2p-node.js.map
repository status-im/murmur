{"version":3,"sources":["../src/devp2p-node.js"],"names":["devp2p","require","ms","chalk","assert","rlp","SHH","Events","ip","devP2PHello","clientId","port","console","log","yellow","toString","address","getPeerAddr","peer","_socket","remoteAddress","remotePort","DevP2PNode","constructor","options","chainId","privateKey","bootnodes","staticnodes","trustedPeers","events","messagesTracker","peers","tracker","setTracker","start","_startDPT","_startRLPX","rlpx","listen","dpt","bind","addBootnodes","broadcast","msg","peerId","code","shh","sendRawMessage","DPT","refreshInterval","endpoint","udpPort","tcpPort","on","err","error","red","addTrustedPeer","node","push","addStaticPeer","cb","connect","id","then","_res","catch","message","indexOf","isTooOld","expiry","dt","Date","getTime","readUInt32BE","RLPx","maxPeers","capabilities","name","version","length","listenPort","map","_clientId","stack","emit","getProtocols","_hello","ttl","topic","data","nonce","exists","includes","encode","getHelloMessage","green","reasonCode","disconnectWe","staticNode","find","x","equals","who","total","getPeers","getDisconnectPrefix","String","AssertionError","getId","banPeer","forEach","bootnode","bootstrap","bold","connectTo","addPeer","dir","module","exports"],"mappings":"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","sourcesContent":["const devp2p = require('ethereumjs-devp2p');\n// const LRUCache = require('lru-cache');\nconst ms = require('ms');\nconst chalk = require('chalk');\nconst assert = require('assert');\nconst rlp = require('rlp-encoding');\n// const Buffer = require('safe-buffer').Buffer;\nconst SHH = require('./shh.js');\nconst Events = require('events');\nconst ip = require('ip');\n\n\nconst devP2PHello = (clientId, port) => {\n  console.log(chalk.yellow(\"* devP2P started: true, listening on:\"));\n  console.log(chalk.yellow(\"- \" + clientId.toString('hex') + '@' + ip.address() + \":\" + port));\n};\n\nconst getPeerAddr = (peer) => `${peer._socket.remoteAddress}:${peer._socket.remotePort}`;\n\nclass DevP2PNode {\n\n  constructor(options) {\n    this.chainId = options.chainId;\n    this.privateKey = options.privateKey;\n    this.bootnodes = options.bootnodes || [];\n    this.staticnodes = options.staticnodes || [];\n    this.trustedPeers = [];\n    this.events = new Events();\n    this.messagesTracker = {};\n    this.peers = {};\n    this.tracker = null;\n  }\n\n  setTracker(tracker){\n    this.tracker = tracker;\n  }\n\n  start(ip, port) {\n    this.ip = ip;\n    this.port = port;\n\n    this._startDPT();\n    this._startRLPX();\n\n    if (ip) {\n      this.rlpx.listen(port, ip);\n      this.dpt.bind(port, ip);\n    }\n\n    this.addBootnodes(this.bootnodes);\n  }\n\n  broadcast(msg, peerId, code = 1) {\n    if (peerId){\n      let peer = this.peers[peerId];\n      peer.shh.sendRawMessage(code, msg);\n    } else {\n      for (let peerId of Object.keys(this.peers)) {\n        let peer = this.peers[peerId];\n        peer.shh.sendRawMessage(code, msg);\n      }\n    }\n  }\n\n  _startDPT() {\n    this.dpt = new devp2p.DPT(this.privateKey, {\n      refreshInterval: 30000,\n      endpoint: { address: '0.0.0.0', udpPort: null, tcpPort: null }\n    });\n    this.dpt.on('error', (err) => console.error(chalk.red(`DPT error: ${err}`)));\n  }\n\n  addTrustedPeer(node){\n    this.trustedPeers.push(node);\n  }\n\n  addStaticPeer(node, cb){\n    this.staticnodes.push(node);\n    this.rlpx.connect({id: node.id, address: node.address, port: node.port})\n      .then(_res => {\n        cb(null, true);\n      })\n      .catch(err => {\n        if (err.message.indexOf(\"Already connected\") > -1){\n          cb(null, true);\n        } else {\n          cb(err);\n        }\n      });\n  }\n\n  isTooOld(expiry) {\n    const dt = (new Date()).getTime() / 1000;\n    return expiry.readUInt32BE(0) < dt;\n  }\n\n  _startRLPX() {\n    this.rlpx = new devp2p.RLPx(this.privateKey, {\n      dpt: this.dpt,\n      maxPeers: 25,\n      capabilities: [\n      //  devp2p.ETH.eth63,\n      //  devp2p.ETH.eth62,\n      //  devp2p.LES.les2,\n        { name: 'shh', version: 6, length: 300, constructor: SHH },\n\n      ],\n      listenPort: null\n    });\n\n    this.staticnodes.map(node => {\n      this.rlpx.connect({id: node.id, address: node.address, port: node.port});\n    });\n\n    devP2PHello(this.rlpx._clientId, this.port);    \n\n    this.rlpx.on('error', (err) => console.error(chalk.red(`RLPx error: ${err.stack || err}`)));\n\n    this.rlpx.on('listening', () => {\n      this.events.emit('ready');\n    });\n    \n    this.rlpx.on('peer:added', (peer) => {\n      const shh = peer.getProtocols()[0];\n\n      let peerId = peer._hello.id.toString('hex');\n\n      this.peers[peerId] = { peer, shh };\n\n      shh.events.on('message', (message, peer) => {\n        let [expiry, ttl, topic, data, nonce] = message;\n\n        if(this.tracker.exists(message, 'devp2p')) return;\n\n        // Verifying if old message is sent by trusted peer\n        if(this.isTooOld(expiry) && !this.trustedPeers.includes(peer)){\n          // console.log(\"Discarting old envelope\");\n          return;\n        }\n\n        this.tracker.push(message, 'devp2p');\n\n        // Broadcast received message again.\n        this.broadcast(rlp.encode([message]));\n\n        this.events.emit('shh_message', message);\n      });\n\n      const clientId = peer.getHelloMessage().clientId;\n      console.log(chalk.green(`Add devp2p peer: ${getPeerAddr(peer)} ${clientId}`));\n    });\n\n    this.rlpx.on('peer:removed', (peer, reasonCode, disconnectWe) => {\n      const staticNode = this.staticnodes.find(x => x.id.equals(peer._clientId));\n      if (staticNode){\n        // Reconnect\n        this.rlpx.connect({id: staticNode.id, address: staticNode.address, port: staticNode.port});\n      }\n\n      const who = disconnectWe ? 'we disconnect' : 'peer disconnect';\n      const total = this.rlpx.getPeers().length;\n      console.log(chalk.yellow(`Remove peer: ${getPeerAddr(peer)} - ${who}, reason: ${peer.getDisconnectPrefix(reasonCode)} (${String(reasonCode)}) (total: ${total})`));\n    });\n\n    this.rlpx.on('peer:error', (peer, err) => {\n      if (err.code === 'ECONNRESET') {\n        return;\n      }\n\n      if (err instanceof assert.AssertionError) {\n        const peerId = peer.getId();\n        if (peerId !== null) this.dpt.banPeer(peerId, ms('5m'));\n\n        console.error(chalk.red(`Peer error (${getPeerAddr(peer)}): ${err.message}`));\n        return;\n      }\n\n      console.error(chalk.red(`Peer error (${getPeerAddr(peer)}): ${err.stack || err}`));\n    });\n  }\n\n  addBootnodes(bootnodes) {\n    bootnodes.forEach((bootnode) => {\n      this.dpt.bootstrap(bootnode).catch((err) => {\n        console.error(chalk.bold.red(`DPT bootstrap error: ${err.message}`));\n      });\n    });\n  }\n\n  connectTo(node) {\n    this.dpt.addPeer(node).then((peer) => {\n      console.dir(\"==> peer added\");\n      return this.rlpx.connect({\n        id: peer.id,\n        address: peer.address,\n        port: peer.tcpPort\n      });\n    }).catch((err) => console.log(chalk.bold.red(`error on connection to local node: ${err.message}`)));\n  }\n\n}\n\nmodule.exports = DevP2PNode;\n"],"file":"devp2p-node.js"}